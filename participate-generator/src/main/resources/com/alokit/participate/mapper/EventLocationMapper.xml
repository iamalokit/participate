<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alokit.participate.mapper.EventLocationMapper">
  <resultMap id="BaseResultMap" type="com.alokit.participate.model.EventLocation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="location_name" jdbcType="VARCHAR" property="locationName" />
    <result column="address_line_1" jdbcType="VARCHAR" property="addressLine1" />
    <result column="address_line_2" jdbcType="VARCHAR" property="addressLine2" />
    <result column="zip_code" jdbcType="VARCHAR" property="zipCode" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, location_name, address_line_1, address_line_2, zip_code, city, state, country, 
    create_time, created_by, update_time, updated_by
  </sql>
  <select id="selectByExample" parameterType="com.alokit.participate.model.EventLocationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from event_location
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from event_location
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from event_location
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.alokit.participate.model.EventLocationExample">
    delete from event_location
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.alokit.participate.model.EventLocation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into event_location (location_name, address_line_1, address_line_2, 
      zip_code, city, state, 
      country, create_time, created_by, 
      update_time, updated_by)
    values (#{locationName,jdbcType=VARCHAR}, #{addressLine1,jdbcType=VARCHAR}, #{addressLine2,jdbcType=VARCHAR}, 
      #{zipCode,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.alokit.participate.model.EventLocation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into event_location
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="locationName != null">
        location_name,
      </if>
      <if test="addressLine1 != null">
        address_line_1,
      </if>
      <if test="addressLine2 != null">
        address_line_2,
      </if>
      <if test="zipCode != null">
        zip_code,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="locationName != null">
        #{locationName,jdbcType=VARCHAR},
      </if>
      <if test="addressLine1 != null">
        #{addressLine1,jdbcType=VARCHAR},
      </if>
      <if test="addressLine2 != null">
        #{addressLine2,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alokit.participate.model.EventLocationExample" resultType="java.lang.Long">
    select count(*) from event_location
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update event_location
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.locationName != null">
        location_name = #{record.locationName,jdbcType=VARCHAR},
      </if>
      <if test="record.addressLine1 != null">
        address_line_1 = #{record.addressLine1,jdbcType=VARCHAR},
      </if>
      <if test="record.addressLine2 != null">
        address_line_2 = #{record.addressLine2,jdbcType=VARCHAR},
      </if>
      <if test="record.zipCode != null">
        zip_code = #{record.zipCode,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event_location
    set id = #{record.id,jdbcType=BIGINT},
      location_name = #{record.locationName,jdbcType=VARCHAR},
      address_line_1 = #{record.addressLine1,jdbcType=VARCHAR},
      address_line_2 = #{record.addressLine2,jdbcType=VARCHAR},
      zip_code = #{record.zipCode,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alokit.participate.model.EventLocation">
    update event_location
    <set>
      <if test="locationName != null">
        location_name = #{locationName,jdbcType=VARCHAR},
      </if>
      <if test="addressLine1 != null">
        address_line_1 = #{addressLine1,jdbcType=VARCHAR},
      </if>
      <if test="addressLine2 != null">
        address_line_2 = #{addressLine2,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        zip_code = #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alokit.participate.model.EventLocation">
    update event_location
    set location_name = #{locationName,jdbcType=VARCHAR},
      address_line_1 = #{addressLine1,jdbcType=VARCHAR},
      address_line_2 = #{addressLine2,jdbcType=VARCHAR},
      zip_code = #{zipCode,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>