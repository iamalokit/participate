<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alokit.participate.mapper.EventMapper">
  <resultMap id="BaseResultMap" type="com.alokit.participate.model.Event">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="event_name" jdbcType="VARCHAR" property="eventName" />
    <result column="event_type" jdbcType="VARCHAR" property="eventType" />
    <result column="participant_type" jdbcType="VARCHAR" property="participantType" />
    <result column="event_category_id" jdbcType="BIGINT" property="eventCategoryId" />
    <result column="event_location_id" jdbcType="BIGINT" property="eventLocationId" />
    <result column="event_date" jdbcType="VARCHAR" property="eventDate" />
    <result column="event_cost" jdbcType="VARCHAR" property="eventCost" />
    <result column="event_pic" jdbcType="VARCHAR" property="eventPic" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.alokit.participate.model.Event">
    <result column="event_description" jdbcType="LONGVARCHAR" property="eventDescription" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, event_name, event_type, participant_type, event_category_id, event_location_id, 
    event_date, event_cost, event_pic, create_time, created_by, update_time, updated_by
  </sql>
  <sql id="Blob_Column_List">
    event_description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.alokit.participate.model.EventExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.alokit.participate.model.EventExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from event
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.alokit.participate.model.EventExample">
    delete from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.alokit.participate.model.Event">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into event (event_name, event_type, participant_type, 
      event_category_id, event_location_id, event_date, 
      event_cost, event_pic, create_time, 
      created_by, update_time, updated_by, 
      event_description)
    values (#{eventName,jdbcType=VARCHAR}, #{eventType,jdbcType=VARCHAR}, #{participantType,jdbcType=VARCHAR}, 
      #{eventCategoryId,jdbcType=BIGINT}, #{eventLocationId,jdbcType=BIGINT}, #{eventDate,jdbcType=VARCHAR}, 
      #{eventCost,jdbcType=VARCHAR}, #{eventPic,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=BIGINT}, 
      #{eventDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.alokit.participate.model.Event">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eventName != null">
        event_name,
      </if>
      <if test="eventType != null">
        event_type,
      </if>
      <if test="participantType != null">
        participant_type,
      </if>
      <if test="eventCategoryId != null">
        event_category_id,
      </if>
      <if test="eventLocationId != null">
        event_location_id,
      </if>
      <if test="eventDate != null">
        event_date,
      </if>
      <if test="eventCost != null">
        event_cost,
      </if>
      <if test="eventPic != null">
        event_pic,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="eventDescription != null">
        event_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null">
        #{eventType,jdbcType=VARCHAR},
      </if>
      <if test="participantType != null">
        #{participantType,jdbcType=VARCHAR},
      </if>
      <if test="eventCategoryId != null">
        #{eventCategoryId,jdbcType=BIGINT},
      </if>
      <if test="eventLocationId != null">
        #{eventLocationId,jdbcType=BIGINT},
      </if>
      <if test="eventDate != null">
        #{eventDate,jdbcType=VARCHAR},
      </if>
      <if test="eventCost != null">
        #{eventCost,jdbcType=VARCHAR},
      </if>
      <if test="eventPic != null">
        #{eventPic,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="eventDescription != null">
        #{eventDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alokit.participate.model.EventExample" resultType="java.lang.Long">
    select count(*) from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update event
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.eventName != null">
        event_name = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.eventType != null">
        event_type = #{record.eventType,jdbcType=VARCHAR},
      </if>
      <if test="record.participantType != null">
        participant_type = #{record.participantType,jdbcType=VARCHAR},
      </if>
      <if test="record.eventCategoryId != null">
        event_category_id = #{record.eventCategoryId,jdbcType=BIGINT},
      </if>
      <if test="record.eventLocationId != null">
        event_location_id = #{record.eventLocationId,jdbcType=BIGINT},
      </if>
      <if test="record.eventDate != null">
        event_date = #{record.eventDate,jdbcType=VARCHAR},
      </if>
      <if test="record.eventCost != null">
        event_cost = #{record.eventCost,jdbcType=VARCHAR},
      </if>
      <if test="record.eventPic != null">
        event_pic = #{record.eventPic,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=BIGINT},
      </if>
      <if test="record.eventDescription != null">
        event_description = #{record.eventDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update event
    set id = #{record.id,jdbcType=BIGINT},
      event_name = #{record.eventName,jdbcType=VARCHAR},
      event_type = #{record.eventType,jdbcType=VARCHAR},
      participant_type = #{record.participantType,jdbcType=VARCHAR},
      event_category_id = #{record.eventCategoryId,jdbcType=BIGINT},
      event_location_id = #{record.eventLocationId,jdbcType=BIGINT},
      event_date = #{record.eventDate,jdbcType=VARCHAR},
      event_cost = #{record.eventCost,jdbcType=VARCHAR},
      event_pic = #{record.eventPic,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=BIGINT},
      event_description = #{record.eventDescription,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event
    set id = #{record.id,jdbcType=BIGINT},
      event_name = #{record.eventName,jdbcType=VARCHAR},
      event_type = #{record.eventType,jdbcType=VARCHAR},
      participant_type = #{record.participantType,jdbcType=VARCHAR},
      event_category_id = #{record.eventCategoryId,jdbcType=BIGINT},
      event_location_id = #{record.eventLocationId,jdbcType=BIGINT},
      event_date = #{record.eventDate,jdbcType=VARCHAR},
      event_cost = #{record.eventCost,jdbcType=VARCHAR},
      event_pic = #{record.eventPic,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alokit.participate.model.Event">
    update event
    <set>
      <if test="eventName != null">
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null">
        event_type = #{eventType,jdbcType=VARCHAR},
      </if>
      <if test="participantType != null">
        participant_type = #{participantType,jdbcType=VARCHAR},
      </if>
      <if test="eventCategoryId != null">
        event_category_id = #{eventCategoryId,jdbcType=BIGINT},
      </if>
      <if test="eventLocationId != null">
        event_location_id = #{eventLocationId,jdbcType=BIGINT},
      </if>
      <if test="eventDate != null">
        event_date = #{eventDate,jdbcType=VARCHAR},
      </if>
      <if test="eventCost != null">
        event_cost = #{eventCost,jdbcType=VARCHAR},
      </if>
      <if test="eventPic != null">
        event_pic = #{eventPic,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="eventDescription != null">
        event_description = #{eventDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.alokit.participate.model.Event">
    update event
    set event_name = #{eventName,jdbcType=VARCHAR},
      event_type = #{eventType,jdbcType=VARCHAR},
      participant_type = #{participantType,jdbcType=VARCHAR},
      event_category_id = #{eventCategoryId,jdbcType=BIGINT},
      event_location_id = #{eventLocationId,jdbcType=BIGINT},
      event_date = #{eventDate,jdbcType=VARCHAR},
      event_cost = #{eventCost,jdbcType=VARCHAR},
      event_pic = #{eventPic,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=BIGINT},
      event_description = #{eventDescription,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alokit.participate.model.Event">
    update event
    set event_name = #{eventName,jdbcType=VARCHAR},
      event_type = #{eventType,jdbcType=VARCHAR},
      participant_type = #{participantType,jdbcType=VARCHAR},
      event_category_id = #{eventCategoryId,jdbcType=BIGINT},
      event_location_id = #{eventLocationId,jdbcType=BIGINT},
      event_date = #{eventDate,jdbcType=VARCHAR},
      event_cost = #{eventCost,jdbcType=VARCHAR},
      event_pic = #{eventPic,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>